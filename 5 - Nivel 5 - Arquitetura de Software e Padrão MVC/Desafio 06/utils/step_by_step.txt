- Criar um banco de dados sqlite
- Alimentar o banco de dados com o DBeaver
- Configurar sua conexão com o banco de dados
    - Mostrar o local do banco de dados
    - Criar o motor para conversar com o banco
    - Montar a estrutura session para definir as ações que teremos com o banco
    - Realizar arquivo de teste
- Realizar a base declarativa para uso de consultas e ações do banco de dados por orientação a objetos
- Realizar as entities de cada tabela
    - Espelhar as tabelas do banco de dados em versão python
- Criação dos repositórios para ação no banco de dados (Injeção de Dependencia: database)
    - Criar a interface do Cliente com os métodos especificados
    - Criar a interface da Pessoa para ambos os tipos de pessoa
    - Criar os métodos:
        - Sacar dinheiro
        - Ver extrato
        - Criar usuario
        - Listar usuarios
    - Criar os testes para cada usuario
        - Teste de Integração
        - Teste Unitário
- Criação dos controllers para regra de negócios (Injeção de Dependencia: repository)
    - Criar os arquivos controllers para cada ação, tipo de pessoa com as interfaces
    - Criar o arquivo para criar usuario
    - Realizar as interfaces para cada controller
- Criação das views 
    - Para cada ação do banco de dados, criar uma view
    - Fazer a interface da view com o método handle
- Criação composer
    - Para cada ação do banco de dados, criar um composer retornando a view
- Criar as rotas e server
    - Criar server com flask importando Flask e realizando o app
    - Criar as rotas com o blueprint e registrando
- Criar as validações
    - Criar as validações de cada ação com o pydantic
- Criar arquivo run.py
    
